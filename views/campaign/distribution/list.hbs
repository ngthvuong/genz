{{#with campaign}}
<div>
    <div class="container-fluid pt-4 px-4">
        <div class="d-flex justify-content-between align-items-center">
            <h4 class="mb-0">{{name}}</h4>
            <div>
                <a href="/campaign/edit/{{id}}" class="btn btn-secondary">Chỉnh Sửa Chiến Dịch</a>
                <a href="/campaign/{{id}}/distributions/create" class="btn btn-success">Tạo mới cứu trợ</a>
            </div>
        </div>
    </div>
    <div class="px-4 table-responsive mt-5 d-flex align-items-center justify-content-between flex-wrap">
        <span class="fw-bold text-dark fs-6">Bảng Danh Sách Cứu Trợ</span>
    </div>
    <div class="px-4 table-responsive">
        <table class="table">
            <thead>
                <tr class="align-middle">
                    <th scope="col" class="w-10 text-center" style="width: 10%;">Ngày</th>
                    <th scope="col" class="w-15" style="width: 15%;">Tên Người Nhận</th>
                    <th scope="col" class="w-15 text-end" style="width: 15%;">Số Tiền</th>
                    <th scope="col" class="w-35 text-start" style="width: 45%;">Lời Nhắn</th>
                    <th scope="col" class="w-15" style="width: 15%;">Lệnh</th>
                </tr>
            </thead>
            <tbody id="distributionsContainer">
            </tbody>
        </table>
    </div>
</div>
<div class="modal fade" id="deleteDistributionModal" tabindex="-1" aria-labelledby="deleteDistributionModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteDistributionModalLabel">Xóa Khoản Cứu Trợ</h5>
            </div>
            <div class="modal-body" id="deleteDistributionBody">
                Bạn có chắc chắn muốn xóa khoản cứu trợ này?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="deleteDistributionButton"
                    onclick="deleteDistribution(event)">Đồng Ý</button>
            </div>
        </div>
    </div>
</div>
<div id="deleteResult" class="toast align-items-center position-fixed bottom-0 end-0" role="alert" aria-live="assertive"
    aria-atomic="true">
    <div class="d-flex">
        <div class="toast-body" id="deleteResultToastBody">
        </div>
        <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
</div>

<script>
    const showDeletePopup = (id, campaignID) => {
        const deleteModal = new bootstrap.Modal(document.getElementById("deleteDistributionModal"))
        deleteModal.show()

        const deleteDistributionButton = document.getElementById("deleteDistributionButton")
        const deleteDistributionBody = document.getElementById("deleteDistributionBody")

        deleteDistributionButton.setAttribute("data-id", id)
        deleteDistributionButton.setAttribute("data-campaign-id", campaignID)

    }
    const deleteDistribution = (event) => {
        const id = event.target.dataset.id
        const campaignID = event.target.dataset.campaignId

        fetch(`/campaign/${campaignID}/distributions/delete/${id}`, {
            method: 'DELETE',
        })
            .then(response => {
                return response.json()
            })
            .then(data => {

                if (data.errors) {
                    document.querySelector("#deleteResultToastBody").innerHTML = `<span class="text-danger">Có lỗi sảy ra, vui lòng thử lại!</span>`
                } else {
                    document.getElementById(`distributionItemRow_${id}`)?.remove()
                    document.querySelector("#deleteResultToastBody").innerHTML = `<span class="text-success">Đã xóa thành công!</span>`
                }
                const modalElement = document.getElementById("deleteDistributionModal")
                const deleteModal = bootstrap.Modal.getInstance(modalElement) || new bootstrap.Modal(modalElement)
                deleteModal.hide()
                const toastDom = document.querySelector("#deleteResult")
                const toast = new bootstrap.Toast(toastDom)
                toast.show()
            })
            .catch(error => {
                console.error('Error:', error)
            })
    }

    document.addEventListener("DOMContentLoaded", () => {
        const itemPerPage = 10
        const data = []
        let itemCount = 0
        let itemLoad = true
        const itemContainerDom = document.querySelector("#distributionsContainer")

        const renderItems = (item) => {
            const row = document.createElement("tr")
            row.classList = "align-middle"
            row.id = `distributionItemRow_${item.id}`
            row.innerHTML = `
                <td class="text-center">${dateFormat(item.madeAt)}</td>
                <td>${escapeHtml(item.receiver)}</td>
                <td class="text-end">${formatAmount(escapeHtml(item.amount))}</td>
                <td class="text-left">${escapeHtml(item.message)}</td>`
            if (!item.donorID) {
                row.innerHTML += `<td>
                    <a class="btn btn-sm btn-primary" href="/campaign/{{id}}/distributions/edit/${item.id}">Sửa</a>
                    <button class="btn btn-sm btn-danger" type="button"
                        onclick="showDeletePopup(${item.id}, {{id}})">Xóa</button>
                </td>`
            } else {
                row.innerHTML += `<td>
                    <a class="btn btn-sm btn-secondary pe-none" href="javascript:void(0)">Sửa</a>
                    <button class="btn btn-sm btn-secondary pe-none" href="#">Xóa</button>
                </td>`
            }
            return row
        }

        const loadMoreItems = async () => {
            itemLoad = false
            const formData = new FormData()
            formData.append("offset", itemCount)
            formData.append("limit", itemPerPage)

            const data = JSON.stringify(Object.fromEntries(formData.entries()));

            fetch(`/campaign/{{id}}/distributions/load`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: data
            })
                .then(response => {
                    return response.json()
                })
                .then(data => {
                    if (data.success) {
                        const { distributions: items } = data
                        if (items.length >= itemPerPage) {
                            itemLoad = true
                        }
                        items.forEach(item => {
                            ++itemCount
                            const row = renderItems(item)
                            itemContainerDom.append(row)
                        })
                    }
                })
                .catch(error => {
                    console.error('Error:', error)
                })
        }
        const onScrollItemsBox = async () => {
            if (itemLoad) {
                const { scrollTop, scrollHeight, clientHeight } = document.documentElement
                if (scrollTop + clientHeight >= scrollHeight - 50) {
                    itemLoad = false
                    await loadMoreItems()
                }
            }
        }
        loadMoreItems()
        window.addEventListener("scroll", onScrollItemsBox)
    })
</script>
{{/with}}