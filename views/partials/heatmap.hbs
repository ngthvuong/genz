<div class="map-container d-none">
    <div id="map-container"></div>
    <button type="button" onClick="expandMap(event)" class="touchSizeMap btn btn-secondary btn-sm"><i
            class="bi bi-arrows-fullscreen"></i></button>
</div>
<script>
    const heatMapData = JSON.parse('{{{heatMapData}}}')
    let map
    if (heatMapData) {
        document.querySelector(".map-container")?.classList.remove("d-none")

        map = new atlas.Map('map-container', {
            center: [
                heatMapData.centerCoordinate.longitude,
                heatMapData.centerCoordinate.latitude
            ],
            zoom: heatMapData.zoom,
            authOptions: {
                authType: 'subscriptionKey',
                subscriptionKey: '9CK5vUwgBEPIqMa2ReEXCeYlWGSkZEZ1wdWHtlZd9UHj8aUtVAwWJQQJ99AKACYeBjFx5reYAAAgAZMP1zkp'
            }
        })

        const features = heatMapData.points.map(point => {
            return {
                type: "Feature",
                geometry: { type: "Point", coordinates: [point.longitude, point.latitude] },
                properties: { priority: point.priority }
            }
        })
        const geoJsonData = {
            type: "FeatureCollection",
            features
        }

        map.events.add('ready', () => {
            const dataSource = new atlas.source.DataSource();
            dataSource.add(geoJsonData);
            map.sources.add(dataSource);

            const heatmapLayer = new atlas.layer.HeatMapLayer(dataSource, null, {
                weight: ['get', 'priority'],
                intensity: 10.0,
                radius: [
                    'interpolate',
                    ['linear'],
                    ['get', 'priority'],
                    0, 30,
                    1, 40
                ],
            });
            map.layers.add(heatmapLayer);
        });
    }
    const expandMap = (event) => {
        const mapContainer = event.target.closest(".map-container")
        if (mapContainer) {
            if (!mapContainer.classList.contains("expand")) {
                mapContainer.classList.add("expand")
                event.target.closest(".touchSizeMap").innerHTML = `<i class="bi bi-arrows-angle-contract"></i>`
            } else {
                mapContainer.classList.remove("expand")
                event.target.closest(".touchSizeMap").innerHTML = `<i class="bi bi-arrows-fullscreen"></i>`
            }

            if (map) {
                map.resize()
            }
        }
    }
</script>